//https://codeforces.com/problemset/problem/1559/D1
//Author: Fuadul Hasan(fuadul202@gmail.com)
//BSMRSTU,Gopalganj
//#include<bits/stdc++.h>
#define _USE_MATH_DEFINES
#include <set>
#include <map>
#include <list>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <string>
#include <vector>
#include <bitset>
#include <random>
#include<iomanip>
#include <cassert>
#include <cstring>
#include <sstream>
#include <complex>
#include <numeric>
#include <iostream>
#include <algorithm>
#include <functional>
#include <unordered_set>
#include <unordered_map>
using namespace std;

//debug..........
#define error(args...) {vector<string>_v=split(#args,',');err(_v.begin(),args);cout<<endl;}
vector<string> split(const string &s, char c) {vector<string>v; stringstream ss(s); string x;while (getline(ss, x, c))v.emplace_back(x); return move(v);} void err(vector<string>::iterator it) {}
template<typename T, typename... Args>void err(vector<string>::iterator it, T a, Args...args) {cout << it->substr((*it)[0] == ' ', it->length()) << " = " << a << " "; err(++it, args...);}

//............ignore it..................//
#define F first
#define S second
#define Pi atan(1)*4
#define mp make_pair
#define pb  push_back
const int M    = 1e9 + 7;
#define endl '\n'
#define ld  long double
#define ll  long long int
#define happy cin.tie(0);
#define point(x) cout<<fixed<<setprecision(x)
int length(string s){return (int)s.size();}
#define mem(a)  memset(a , 0 ,sizeof a)
#define memn(a) memset(a , -1 ,sizeof a)
#define coding ios::sync_with_stdio(false);
#define Unique(c) (c).resize(unique(all(c))-(c).begin())
#define vout(v) for (auto z: v) cout << z << " "; cout << endl;

int length(long long x){int l = 0;for(long long i=x;i;i/=10)l++;return l;}
int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1}; 

#define rep(i,b,e)  for(__typeof(e) i = (b) ; i != (e + 1) - 2 * ((b) > (e))  ; i += 1 - 2 * ((b) > (e)))

long long Inv_pow(long long a,long long n){ll res = 1;while(n){if(n&1) res = ((res%M)*(a%M))%M;a = ((a%M)*(a%M))%M;n>>=1;}return res%M;}
template <typename T> vector<T> readVector(int n) {vector<T> res(n); for (int i = 0 ; i < n ; i++) cin >> res[i]; return res; }
// suffix_prefix....
std::vector<ll> prefix_sum(std::vector<ll> a){int n = a.size();std::vector<ll> prf(n,0);for(int i=0;i<n;i++){
if(i == 0){prf[i] = a[i];}else{prf[i] = prf[i-1]+a[i];}}return prf;}
std::vector<ll> suffix_sum(std::vector<ll> a){int n = a.size();std::vector<ll>suf(n,0);for(int i=n-1;i>=0;i--){
if(i == n-1){suf[i] = a[i];}else{suf[i] = suf[i+1]+a[i];}}return suf;}

long long Lcm(long long a,long long b){return (((a)*(b)))/__gcd(a,b);}

#define Test cout<<"Case #"<<tc++<<": ";
int tc = 1;

inline void read(std::vector<int> &v){for(int i=0;i<(int)v.size();i++){cin>>(v[i]);}}
inline void readl(std::vector<ll> &v){for(int i=0;i<(int)v.size();i++){cin>>(v[i]);}}

template<class T> bool remin(T& a, const T& b) { return a > b ? a = b, 1 : 0; }
template<class T> bool remax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }

inline void read(int v[],int n){for(int i=0;i<n;i++){cin>>(v[i]);}}
inline void readl(ll v[],int n){for(int i=0;i<n;i++){cin>>(v[i]);}}

inline int add(int a, int b, int mod) {a += b ; return a >= mod ? a - mod : a ;}
inline int sub(int a, int b, int mod) {a -= b ; return a < 0 ? a + mod : a ;}
inline int mul(int a, int b, int mod) {return (ll)a * b % mod ;}

#define   pr     pair<int, int> 
#define   vpr     vector<pr> 
#define   vi       std::vector<int>
#define   vll      std::vector<ll>
#define   all(n) n.begin(),n.end()


const int Inf           = (int)2e9 + 5;
const ll  Lnf           = (ll)2e18 + 5;
const int N             = 5e3 + 5;
const int NN            = 1e6 + 5;

vector<int>g1[N];
int par1[N];
int vis1[N];

vector<int>g2[N];
int par2[N];
int vis2[N];

void dfs(int u,int par){
    vis1[u] = 1;
    par1[u] = par;
    for(auto v: g1[u]){
        if(v != par)dfs(v,u);
    }
}

void dfs1(int u,int par){
    vis2[u] = 1;
    par2[u] = par;
    for(auto v: g2[u]){
        if(v != par)dfs1(v,u);
    }
}

int find(int x){
    if(par2[x] != x){
        return par2[x] = find(par2[x]);
    }else return x;
}

void merge(int x, int y){
    par2[x] = y;
}

int find1(int x){
    if(par1[x] != x){
        return par1[x] = find1(par1[x]);
    }else return x;
}

void merge1(int x, int y){
    par1[x] = y;
}

int solve() 
{
    
    //Test

    int n,m,k;
    cin>>n>>m>>k;

    int x,y;
    for(int i=0;i<m;i++){
        cin>>x>>y;
        g1[x].pb(y);
        g1[y].pb(x);
    }

    for(int i=0;i<k;i++){
        cin>>x>>y;
        g2[x].push_back(y);
        g2[y].push_back(x);
    }
    for(int i=1;i<=n;i++){
        if(vis1[i] == 0){
            dfs(i,i);
        }
    }

    for(int i=1;i<=n;i++){
        if(vis2[i] == 0){
            dfs1(i,i);
        }
    }

    int  cnt = 0;
    vpr ans;
    for(int i=1;i<=n;i++){
        for(int j=i+1;j<=n;j++){
            int x = find(i);
            int y = find(j); 
            int x1 = find1(i);
            int y1 = find1(j);
            if(x!=y and x1 != y1){
                ans.push_back({i,j});
                cnt++;
                merge(x,y);
                merge1(x1,y1);
                //error(x,y,x1,y1)
            }
        }
    }

    cout<<cnt<<endl;
    for(int i=0;i<cnt;i++){
        cout<<ans[i].F<<" "<<ans[i].S<<endl;
    }

    return 0;
    //error();
}
int main(){

    happy coding
    int test = 1;
    //cin>>test;
    while (test--)solve();return 0;
}

/*
1. Everything happens for something good.
2. Don't expect anything from anyone except yourself.
3. Self discipline is the magic power that makes you unstoppable.
*/

/* Note:
-> when you use long long. always keep ll in integer number. like 2LL or (ll)i.
*/
